# Name of Workflow
name: Deploy Application

# Event to trigger it
on:
  push:
    branches:
      - main

# List of Jobs to run
jobs:
  build:
    name: Test , Build and Deploy Application
    runs-on: ubuntu-latest
    steps:
      # Checkout Branch as first step
      - name: Initial Setup
        uses: actions/checkout@v2

      # Build the Test Image
      - name: Build Test Docker Image
        run: docker build -t docker-express/test:latest -f ./client/Dockerfile.test ./client

      # Run the Test Container
      - name: Run Tests
        env:
          CI: true
        run: docker run  -e CI=true  docker-express/test

      # Build Frontend Production Image
      - name: Build Frontend Production Image
        run: docker build -t dasiloy/docker-express-client:latest ./client

      # Build Server Production Image
      - name: Build Server Production Image
        run: docker build -t dasiloy/docker-express-api:latest ./api

      # Build Frontend Production Image
      - name: Build Worker Production Image
        run: docker build -t dasiloy/docker-express-worker:latest ./worker

      # Build Frontend Production Image
      - name: Build Frontend Production Image
        run: docker build -t dasiloy/docker-express-nginx:latest ./nginx

       # Log in Docker
      - name: Login to Docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

        # Push Frontend Production Image
      - name: Push Frontend Production Image
        run: docker push dasiloy/docker-express-client

        # Push Server Production Image
      - name: Push Server Production Image
        run: docker push dasiloy/docker-express-api

        # Push Worker Production Image
      - name: Push Worker Production Image
        run: docker push dasiloy/docker-express-worker

         # Push Nginx Production Image
      - name: Push NginX Production Image
        run: docker push dasiloy/docker-express-nginx

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          application_name: multi-express-app
          environment_name: Multi-express-app-env
          existing_bucket_name: elasticbeanstalk-us-east-1-977098995641
          region: us-east-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}





 




 
